apply plugin: 'com.android.application'
apply plugin: 'com.jakewharton.butterknife'

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    defaultConfig {
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode rootProject.ext.versionCode
        versionName rootProject.ext.versionName

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [moduleName: project.getName()]
            }
        }
    }
    buildTypes {
        debug {

            buildConfigField "String", "SERVER_URL", "\"${loadServerUrl()}\""//域名
            debuggable true

            // apk命名
            android.applicationVariants.all { variant ->
                variant.outputs.each { output ->
                    def outputFile = output.outputFile
                    if (outputFile != null && outputFile.name.endsWith('.apk')) {
                        def fileName = "cdrb-Android-${defaultConfig.versionCode}-${defaultConfig.versionName}.apk"
                        output.outputFile = new File(outputFile.parent, fileName)
                    }
                }
            }
        }

        preRelease {
        }

        release {
        }
    }
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    testCompile 'junit:junit:4.12'

    compile "com.android.support:appcompat-v7:$rootProject.supportLibraryVersion"
    compile "com.android.support:design:$rootProject.supportLibraryVersion"
    compile "com.android.support:cardview-v7:$rootProject.supportLibraryVersion"

    compile 'com.ashokvarma.android:bottom-navigation-bar:1.3.1'

    // butterknife --start
    compile "com.jakewharton:butterknife:$rootProject.butterKnifeVersion"
    annotationProcessor "com.jakewharton:butterknife-compiler:$rootProject.butterKnifeAnnotationVersion"
    // --end

    //ARouter --start
    compile "com.alibaba:arouter-api:$rootProject.ARouterApi"
    annotationProcessor "com.alibaba:arouter-compiler:$rootProject.ARouterCompiler"
    //--end

    //CommonLibrary
    compile project(':Libraries:CommonLibrary')

    //当组件合并到主项目时(非组件开发模式),将组件打包成arr包进行依赖各组件
    if (!isModule.toBoolean()) {
        //用户中心模块
        compile project(':Modules:UserCenter')
    }

    compile 'com.github.qdxxxx:BezierViewPager:v1.0.2'
}

def loadServerUrl() {
    return rootProject.ext.serverUrl
}